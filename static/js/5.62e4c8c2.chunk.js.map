{"version":3,"sources":["componets/DarkMode/index.js"],"names":["DarkMode","useState","isDarkMode","setDarkMode","useEffect","window","matchMedia","matches","document","body","classList","add","checked","id","type","onClick","tagBody","toggle","contains","className","htmlFor"],"mappings":"qJA4BeA,UAzBf,WACE,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OARAC,qBAAU,WACYC,OAAOC,WAAW,gCAA9BC,UAENJ,GAAY,GACZK,SAASC,KAAKC,UAAUC,IAAI,iBAE9B,IAGA,qCACE,uBAAQC,QAASV,EAAaW,GAAG,WAAWC,KAAK,aACjD,uBAAOC,QAjBiB,WAC1B,IAAMC,EAAUR,SAASC,KAAKC,UAC9BM,EAAQC,OAAO,cACfd,EAAYa,EAAQE,SAAS,gBAcUC,UAAU,SAASC,QAAQ,kB","file":"static/js/5.62e4c8c2.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport './darkMode.css';\r\n\r\nfunction DarkMode() {\r\n  const [isDarkMode, setDarkMode] = useState(false);\r\n\r\n  const handleClickDarkMode = () => {\r\n    const tagBody = document.body.classList;\r\n    tagBody.toggle(\"isDarkMode\");\r\n    setDarkMode(tagBody.contains(\"isDarkMode\"));\r\n  };\r\n\r\n  useEffect(function(){\r\n    const { matches } = window.matchMedia('(prefers-color-scheme: dark)')\r\n    if (matches) {\r\n      setDarkMode(true)\r\n      document.body.classList.add('isDarkMode')\r\n    }\r\n  },[])\r\n\r\n  return(\r\n    <>\r\n      <input  checked={isDarkMode}  id='checkbox' type='checkbox'/> \r\n      <label onClick={handleClickDarkMode} className='switch' htmlFor='checkbox'/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DarkMode;"],"sourceRoot":""}