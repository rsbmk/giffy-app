{"version":3,"sources":["services/settings.js","componets/Gif/index.js","componets/Spinner/index.js","componets/Header/index.js","componets/GifList/index.js","context/GifsContext.js","hooks/useNearScreen.js","componets/TrendingSearches/index.js","services/getGifs.js","hooks/useGifsSearch.js","pages/Home/index.js","pages/SearchResults/index.js","services/getSingleGif.js","hooks/useCallSigleGif.js","pages/Detail/index.js","App.js","reportWebVitals.js","index.js"],"names":["API_URL","API_KEY","URL_API_TRENDING","useApiUrl","keyword","page","rating","language","API_URL_SEARCH","$api_url","Gif","title","url","id","to","className","loading","src","alt","React","memo","Spinner","Search","lazy","DarkMode","Header","GifList","gifList","decodeURI","map","gifs","preProps","nextProps","Context","createContext","GifsContextProvider","children","useState","setGifs","Provider","value","useNearScrean","once","isNearScreen","setShow","elementOfObserver","useRef","useEffect","observer","IntersectionObserver","entries","isIntersecting","disconnect","rootMargin","observe","current","TreandingTopics","LeazyTrending","ref","fallback","GetGifs","fetch","then","response","json","responseApi","resApi","data","gif","images","downsized_medium","useGifsSearch","useContext","GifsContext","setLoading","setPage","nextGifs","preGifs","concat","Home","Helmet","name","content","SearchResults","params","debounceHandleNextPage","useCallback","debounce","prePage","fromApiResponse","useCallSigleGif","gifFromContext","find","singleGif","setGif","IsError","setIsError","res","getSigleGif","catch","DetailGif","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd348861.chunk.js","sourcesContent":["export const API_URL = \"https://api.giphy.com/v1\";\r\nexport const API_KEY = \"7XIrr16tQKMClBgk5uWHFjHbowtammMS\";\r\nconst URL_API_TRENDING = `${API_URL}/gifs/trending?api_key=${API_KEY}&limit=25&rating=g`;\r\n\r\nexport function useApiUrl(keyword, page, rating, language) {\r\n  const API_URL_SEARCH = `${API_URL}/gifs/search?api_key=${API_KEY}&q=${keyword}&limit=20&offset=${\r\n    page * 20\r\n  }&rating=${rating}&lang=${language}`;\r\n\r\n  const $api_url = keyword ? API_URL_SEARCH : URL_API_TRENDING;\r\n  return { $api_url };\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"wouter\";\r\nimport \"./styles.css\";\r\n\r\nfunction Gif({ title, url, id }) {\r\n  return (\r\n    <Link to={`/giffy-app/detail/gif/${id}`}>\r\n      <div className=\"wrapImgGif\">\r\n        <img className=\"imgGif\" loading=\"lazy\" src={url} alt={title} />\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\nexport default React.memo(Gif);\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nexport default function Spinner() {\r\n  return <div className=\"spinner\"></div>;\r\n}\r\n","import React from \"react\";\r\nimport \"./headerStyles.css\";\r\n\r\nimport { Link } from \"wouter\";\r\n\r\nconst Search = React.lazy(()=> import(\"../Search\")) ;\r\nconst DarkMode = React.lazy(()=> import(\"../DarkMode\")) ;\r\n\r\nexport function Header() {\r\n  return (\r\n    <div className=\"containerHeader\">\r\n      <div className=\"wrapTitle-DarkMode\">\r\n        <Link className=\"title\" to=\"/giffy-app/\">\r\n          Giffy\r\n        </Link>\r\n        <DarkMode/>\r\n      </div>\r\n      <Search />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Header);\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nimport Gif from \"../Gif\";\r\nimport Spinner from \"../Spinner\";\r\n\r\nfunction GifList({ keyword, gifList, loading}) {\r\n  \r\n  return (\r\n    \r\n    <div className=\"containerGifList\">\r\n      {keyword ? (\r\n        <h2 className=\"tittleGifList\">{decodeURI(keyword)}</h2>\r\n      ) : (\r\n        <h2 className=\"tittleGifList\">\r\n          Trending <i className=\"fas fa-chart-line\"></i>\r\n        </h2>\r\n      )}\r\n\r\n      <div className=\"wrpaListOfGifs\">\r\n        {loading ? (\r\n          <Spinner />\r\n        ) : (\r\n          gifList.map((gifs) => {\r\n            return (\r\n              <Gif\r\n                key={gifs.id}\r\n                id={gifs.id}\r\n                title={gifs.title}\r\n                url={gifs.url}\r\n              />\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default React.memo(GifList, (preProps, nextProps) => {\r\n\r\n return (preProps.gifList === nextProps.gifList && preProps.loading === nextProps.loading)\r\n});","import React, { useState } from \"react\";\r\n\r\nconst Context = React.createContext({});\r\n\r\nexport function GifsContextProvider({ children }) {\r\n  const [gifs, setGifs] = useState([]);\r\n\r\n  return (\r\n    <Context.Provider value={{ gifs, setGifs }}>{children}</Context.Provider>\r\n  );\r\n}\r\n\r\nexport default Context;\r\n","import { useEffect, useRef, useState } from \"react\";\r\n\r\nexport default function useNearScrean({once = true}= {}) {\r\n  const [isNearScreen, setShow] = useState(false);\r\n  const elementOfObserver = useRef();\r\n\r\n  useEffect(function () {\r\n    const handleOnChange = (entries, observer) => {\r\n      const element = entries[0];\r\n      if (element.isIntersecting) {\r\n        setShow(true);\r\n        once && observer.disconnect();\r\n      }else{\r\n        !once && setShow(false);\r\n      }\r\n    };\r\n\r\n    const observer = new IntersectionObserver(handleOnChange, {\r\n      rootMargin: \"200px\"\r\n    });\r\n\r\n    observer.observe(elementOfObserver.current);\r\n\r\n    return () => observer.disconnect();\r\n  }, [once]);\r\n\r\n  return { isNearScreen, elementOfObserver };\r\n}\r\n","import React, { Suspense } from \"react\";\r\nimport useNearScrean from \"../../hooks/useNearScreen\";\r\nconst TreandingTopics = React.lazy(() => import(\"../TrendingTopics\"));\r\n\r\nfunction LeazyTrending() {\r\n  const { isNearScreen, elementOfObserver } = useNearScrean();\r\n\r\n  return (\r\n    <div ref={elementOfObserver}>\r\n      <Suspense fallback={null}>\r\n        {isNearScreen ? <TreandingTopics /> : null}\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\nexport default React.memo(LeazyTrending)\r\n","import { useApiUrl } from \"../services/settings\";\r\n\r\nexport default function GetGifs({keyword, page, rating, language}) {\r\n  const { $api_url } = useApiUrl(keyword, page, rating, language);\r\n\r\n  const gifs = fetch($api_url)\r\n    .then((response) => response.json())\r\n    .then(responseApi);\r\n\r\n  return gifs;\r\n}\r\n\r\nconst responseApi = (resApi) => {\r\n  const { data = [] } = resApi;\r\n\r\n  const gifs = data.map((gif) => {\r\n    const { title, id, images } = gif;\r\n    const { url } = images.downsized_medium;\r\n    return { title, id, url };\r\n  });\r\n\r\n  return gifs;\r\n};\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport GifsContext from \"../context/GifsContext\";\r\nimport GetGifs from \"../services/getGifs\";\r\n\r\nconst INITIAL_PAGE = 0;\r\n\r\n  export default function useGifsSearch(keyword, rating, language) {\r\n  const { gifs, setGifs } = useContext(GifsContext);\r\n  const [loading, setLoading] = useState(false);\r\n  const [page, setPage] = useState(INITIAL_PAGE);\r\n  useEffect(\r\n    function () {\r\n      setLoading(true);\r\n      GetGifs({\r\n        keyword: keyword,\r\n        rating: rating,\r\n        language: language\r\n      }).then((gifs) => {\r\n        setGifs(gifs);\r\n        setLoading(false);\r\n      });\r\n    },\r\n    [keyword, setGifs, rating,language]\r\n  );\r\n\r\n  useEffect(\r\n    function () {\r\n      if (page === INITIAL_PAGE) return;\r\n\r\n      GetGifs({\r\n        keyword: keyword,\r\n        page: page,\r\n        rating: rating,\r\n        language:language\r\n      }).then((nextGifs) => {\r\n        setGifs((preGifs) => preGifs.concat(nextGifs));\r\n      });\r\n    },\r\n    [page, keyword, setGifs, rating, language]\r\n  );\r\n  return { gifs, loading, setPage };\r\n}\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nimport GifList from \"componets/GifList\";\r\nimport Header from \"componets/Header\";\r\nimport TreandingTerms from \"componets/TrendingSearches\";\r\n\r\nimport useGifsSearch from \"hooks/useGifsSearch\";\r\n\r\nimport { Helmet } from \"react-helmet\";\r\n\r\n function Home() {\r\n\r\n const { gifs, loading } = useGifsSearch()\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>Giffy | Roberto Bocio Melo</title>\r\n        <meta name=\"description\" content=\"This App is to search gifs\"/>\r\n      </Helmet>\r\n      <Header />\r\n      <div className=\"wrpaHome\">\r\n        <GifList gifList={gifs} loading={loading} />\r\n        <TreandingTerms />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Home);\r\n","import React, { useCallback, useEffect } from \"react\";\r\nimport \"./styles.css\";\r\n\r\nimport useGifsSearch from \"hooks/useGifsSearch\";\r\nimport useNearScrean from \"hooks/useNearScreen\";\r\n\r\nimport debounce from \"just-debounce-it\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst GifList = React.lazy(() => import(\"componets/GifList\"));\r\nconst Header = React.lazy(() => import(\"componets/Header\")) ;\r\n\r\nexport function SearchResults({ params }) {\r\n\r\n  const {keyword, rating, language} = params\r\n\r\n  const { gifs, loading, setPage } = useGifsSearch(keyword, rating, language);\r\n  const {isNearScreen, elementOfObserver } = useNearScrean({once: false});\r\n \r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const debounceHandleNextPage = useCallback(debounce(\r\n    () => setPage((prePage) => prePage + 1), 500\r\n  ),[]); \r\n\r\n  useEffect(function () {\r\n    if (isNearScreen) debounceHandleNextPage();\r\n  },[debounceHandleNextPage,isNearScreen]);\r\n\r\n\r\n  return (\r\n    <div className=\"wrapSearchResults\">\r\n      <Helmet>\r\n        <title>Results of {decodeURI(keyword)}</title>\r\n        <meta name=\"description\" content={`This page is show the results on search ${decodeURI(keyword)}`} /> \r\n      </Helmet>\r\n      <Header />\r\n      <GifList keyword={keyword} gifList={gifs} loading={loading} />\r\n      <div ref={elementOfObserver}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(SearchResults, (preProps, nextProps) => {\r\nreturn preProps.params.keyword === nextProps.params.keyword && preProps.params.rating === nextProps.params.rating\r\n});\r\n","import { API_URL, API_KEY } from \"../services/settings\";\r\n\r\nconst fromApiResponse = (responseApi) =>{\r\n  const { data } = responseApi;\r\n  const { id, images, title } = data;\r\n  const { url } = images.downsized_medium;\r\n  \r\n  const gif = {id, title, url};\r\n  return gif\r\n};\r\n\r\nexport default function getSigleGif({id}) {\r\n  return fetch(`${API_URL}/gifs/${id}?api_key=${API_KEY}`)\r\n    .then(res => res.json())\r\n    .then(fromApiResponse);\r\n} ","import { useContext, useEffect, useState } from \"react\";\r\n\r\nimport GifsContext from \"../context/GifsContext\";\r\n\r\nimport getSigleGif from \"../services/getSingleGif\";\r\n\r\nexport default function useCallSigleGif({id}) {\r\n  const { gifs } = useContext(GifsContext);\r\n  const gifFromContext = gifs.find(singleGif => singleGif.id === id )\r\n\r\n  const [gif, setGif ] = useState(gifFromContext)\r\n  const [loading, setLoading] = useState(false)\r\n  const [IsError, setIsError] = useState(false)\r\n\r\n  useEffect(function () {\r\n    if (!gif) {\r\n      setLoading(true)\r\n      getSigleGif({id})\r\n      .then(gif => {\r\n\r\n        setGif(gif)\r\n\r\n        setLoading(false)\r\n        setIsError(false)\r\n\r\n      }).catch(() =>{\r\n\r\n        setLoading(false)\r\n        setIsError(true)\r\n      })\r\n    }\r\n  },[id, gif])\r\n  \r\n  return {gif, loading, IsError}\r\n}\r\n  \r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nimport Gif from \"componets/Gif\";\r\nimport Header from \"componets/Header\";\r\nimport Spinner from \"componets/Spinner\"\r\n\r\nimport useCallSigleGif from \"hooks/useCallSigleGif\";\r\n\r\nimport { Redirect } from \"wouter\";\r\nimport { Helmet } from \"react-helmet\"\r\n\r\n function DetailGif({ params }) {\r\n\r\n  const {gif, loading, IsError} = useCallSigleGif({id: params.id})\r\n\r\n  if (loading){\r\n     return (\r\n     <>\r\n     <Helmet>\r\n       <title>Cargando...</title>\r\n     </Helmet>\r\n       <Spinner/>\r\n     </>\r\n     )\r\n  }\r\n\r\n  if (IsError) return <Redirect to={\"/giffy-app/\"}/>\r\n  if (!gif) return null\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>{gif.title} | Giffy</title>\r\n      </Helmet>\r\n      <Header />\r\n      <div className=\"containerGifDetali\">\r\n         <h2 className=\"titleGifDetail\">{gif.title}</h2>\r\n        <Gif title={gif.title} id={gif.id} url={gif.url} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(DetailGif, ((preProps, nextProps) =>{\r\nreturn preProps.id === nextProps.id\r\n}))\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { GifsContextProvider } from \"./context/GifsContext\";\r\nimport { Route } from \"wouter\";\r\nimport Home from \"./pages/Home\";\r\nimport SearchResults from \"./pages/SearchResults\";\r\nimport DetailGif from \"./pages/Detail\";\r\n\r\nfunction App() {\r\n  return (\r\n    <GifsContextProvider>\r\n      <Route path=\"/giffy-app/\" component={Home} />\r\n      <Route path=\"/giffy-app/search/:keyword/:rating/:language\" component={SearchResults} />\r\n      <Route path=\"/giffy-app/detail/gif/:id\" component={DetailGif} />\r\n    </GifsContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, { Suspense } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <Suspense fallback={null}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Suspense>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}