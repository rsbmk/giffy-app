{"version":3,"sources":["services/settings.js","context/GifsContext.js","services/getGifs.js","componets/Gif/index.js","componets/Spinner/index.js","componets/GifList/index.js","hooks/useGifsSearch.js","componets/Search/index.js","componets/Header/index.js","componets/TrendingSearches/index.js","hooks/useNearScreen.js","pages/Home/index.js","pages/SearchResults/index.js","pages/Detail/index.js","App.js","reportWebVitals.js","index.js"],"names":["API_URL","API_KEY","URL_API_TRENDING","Context","React","createContext","GifsContextProvider","children","useState","gifs","setGifs","Provider","value","getGifs","keyword","url","fetch","then","response","json","data","responseApi","resApi","map","gif","title","id","images","downsized_medium","Gif","to","className","loading","src","alt","Spinner","GifList","useContext","GifsContext","setLoading","useEffect","useGifsSearch","decodeURI","Search","keywordInput","setKeywordInput","useLocation","setLocation","onSubmit","evt","preventDefault","onChange","target","placeholder","Header","stateDarkMode","setStateDarkMode","onClick","_","tagBody","document","body","classList","toggle","contains","TreandingTopics","lazy","LeazyTrending","isNearScreen","setShow","elementOfObserver","useRef","observer","IntersectionObserver","entries","isIntersecting","disconnect","rootMargin","observe","current","useNearScrean","ref","fallback","Home","SearchResults","params","DetailGif","find","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8807eea5.chunk.js","sourcesContent":["export const API_URL = \"https://api.giphy.com/v1\";\r\nexport const API_KEY = \"7XIrr16tQKMClBgk5uWHFjHbowtammMS\";\r\nexport const URL_API_TRENDING =\r\n  \"https://api.giphy.com/v1/gifs/trending?api_key=7XIrr16tQKMClBgk5uWHFjHbowtammMS&limit=25&rating=g\";\r\n","import React, { useState } from \"react\";\r\n\r\nconst Context = React.createContext({});\r\n\r\nexport function GifsContextProvider({ children }) {\r\n  const [gifs, setGifs] = useState([]);\r\n\r\n  return (\r\n    <Context.Provider value={{ gifs, setGifs }}>{children}</Context.Provider>\r\n  );\r\n}\r\n\r\nexport default Context;\r\n","import { API_URL } from \"../services/settings\";\r\nimport { API_KEY } from \"../services/settings\";\r\n\r\nexport default function getGifs(keyword, url) {\r\n  if (keyword && !url) {\r\n    const gifs = fetch(\r\n      `${API_URL}/gifs/search?api_key=${API_KEY}&q=${keyword}&limit=25&offset=0&rating=g&lang=en`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => responseApi(data));\r\n    return gifs;\r\n  } else if (!keyword && url) {\r\n    const gifs = fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => responseApi(data));\r\n    return gifs;\r\n  }\r\n}\r\n\r\nconst responseApi = (resApi) => {\r\n  const { data = [] } = resApi;\r\n\r\n  const gifs = data.map((gif) => {\r\n    const { title, id, images } = gif;\r\n    const { url } = images.downsized_medium;\r\n    return { title, id, url };\r\n  });\r\n\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"wouter\";\r\nimport \"./styles.css\";\r\n\r\nexport function Gif({ title, url, id }) {\r\n  return (\r\n    <Link to={`/giffy-app/gifs/detail/${id}`}>\r\n      <div className=\"wrapImgGif\">\r\n        <img className=\"imgGif\" loading=\"lazy\" src={url} alt={title} />\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nexport default function Spinner() {\r\n  return <div className=\"spinner\"></div>;\r\n}\r\n","import React from \"react\";\r\nimport useGifsSearch from \"../../hooks/useGifsSearch\";\r\nimport { Gif } from \"../Gif\";\r\nimport Spinner from \"../Spinner\";\r\nimport \"./styles.css\";\r\n\r\nexport default function GifList({ keyword, url, title }) {\r\n  const { gifs, loading } = useGifsSearch(keyword, url);\r\n\r\n  return (\r\n    <div className=\"containerGifList\">\r\n      <h2 className=\"tittleGifList\">{decodeURI(title)}</h2>\r\n      <div className=\"wrpaListOfGifs\">\r\n        {loading ? (\r\n          <Spinner />\r\n        ) : (\r\n          gifs.map((gifs) => {\r\n            return (\r\n              <Gif\r\n                key={gifs.id}\r\n                id={gifs.id}\r\n                title={gifs.title}\r\n                url={gifs.url}\r\n              />\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport getGifs from \"../services/getGifs\";\r\nimport GifsContext from \"../context/GifsContext\";\r\n\r\nexport default function useGifsSearch(keyword = \"\", url = \"\") {\r\n  const { gifs, setGifs } = useContext(GifsContext);\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(\r\n    function () {\r\n      setLoading(true);\r\n      getGifs(keyword, url).then((gifs) => {\r\n        setGifs(gifs);\r\n        setLoading(false);\r\n      });\r\n    },\r\n    [keyword, url, setGifs]\r\n  );\r\n\r\n  return { gifs, loading };\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useLocation } from \"wouter\";\r\nimport \"./styles.css\";\r\n\r\nexport default function Search() {\r\n  const [keywordInput, setKeywordInput] = useState(\"\");\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [location, setLocation] = useLocation();\r\n\r\n  const handleChange = (evt) => {\r\n    setKeywordInput(evt.target.value);\r\n  };\r\n  const handleSumbit = (evt) => {\r\n    evt.preventDefault();\r\n    setLocation(`/giffy-app/gifs/${keywordInput}`);\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className=\"wrapInputSearch\"\r\n      onSubmit={handleSumbit}\r\n      value={keywordInput}\r\n    >\r\n      <label>\r\n        <i className=\"fas fa-search\"></i>\r\n      </label>\r\n      <input\r\n        className=\"inputSearch\"\r\n        onChange={handleChange}\r\n        placeholder=\"Search you favorite gifs ...\"\r\n      />\r\n    </form>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"wouter\";\r\nimport Search from \"../Search\";\r\nimport \"./styles.css\";\r\n\r\nexport function Header() {\r\n  const [stateDarkMode, setStateDarkMode] = useState(false);\r\n\r\n  const handleClick = (_) => {\r\n    const tagBody = document.body.classList;\r\n    tagBody.toggle(\"isDarkMode\");\r\n    setStateDarkMode(tagBody.contains(\"isDarkMode\"));\r\n  };\r\n\r\n  return (\r\n    <div className=\"containerHeader\">\r\n      <div className=\"wrapTitle-DarkMode\">\r\n        <Link className=\"title\" to=\"/giffy-app/\">\r\n          Giffy\r\n        </Link>\r\n        <div className=\"wrapDarkMode\" onClick={handleClick}>\r\n          {stateDarkMode ? (\r\n            <i className=\"fas fa-sun\" />\r\n          ) : (\r\n            <i className=\"far fa-moon\" />\r\n          )}\r\n          DarkMode\r\n        </div>\r\n      </div>\r\n      <Search />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { Suspense } from \"react\";\r\nimport useNearScrean from \"../../hooks/useNearScreen\";\r\nconst TreandingTopics = React.lazy(() => import(\"../TrendingTopics\"));\r\n\r\nexport default function LeazyTrending() {\r\n  const { isNearScreen, elementOfObserver } = useNearScrean();\r\n\r\n  return (\r\n    <div ref={elementOfObserver}>\r\n      <Suspense fallback={null}>\r\n        {isNearScreen ? <TreandingTopics /> : null}\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useRef, useState } from \"react\";\r\n\r\nexport default function useNearScrean() {\r\n  const [isNearScreen, setShow] = useState(false);\r\n  const elementOfObserver = useRef();\r\n\r\n  useEffect(function () {\r\n    const handleOnChange = (entries, observer) => {\r\n      const element = entries[0];\r\n      if (element.isIntersecting) {\r\n        setShow(true);\r\n        observer.disconnect();\r\n      }\r\n    };\r\n\r\n    const observer = new IntersectionObserver(handleOnChange, {\r\n      rootMargin: \"100px\",\r\n    });\r\n\r\n    observer.observe(elementOfObserver.current);\r\n\r\n    return () => observer.disconnect();\r\n  }, []);\r\n\r\n  return { isNearScreen, elementOfObserver };\r\n}\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport GifList from \"../../componets/GifList\";\r\nimport { URL_API_TRENDING } from \"../../services/settings\";\r\nimport Header from \"../../componets/Header\";\r\nimport TreandingTerms from \"../../componets/TrendingSearches\";\r\n\r\nexport function Home() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"wrpaHome\">\r\n        <GifList title=\"trending\" url={URL_API_TRENDING} />\r\n        <TreandingTerms />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport GifList from \"../../componets/GifList\";\r\nimport Header from \"../../componets/Header\";\r\n\r\nexport function SearchResults({ params }) {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <GifList title={params.keyword} keyword={params.keyword} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchResults;\r\n","import React, { useContext } from \"react\";\r\nimport { Gif } from \"../../componets/Gif\";\r\nimport Header from \"../../componets/Header\";\r\nimport GifsContext from \"../../context/GifsContext\";\r\nimport \"./style.css\";\r\n\r\nexport default function DetailGif({ params }) {\r\n  const { gifs } = useContext(GifsContext);\r\n\r\n  const { title, id, url } = gifs.find((gif) => gif.id === params.id);\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"containerGifDetali\">\r\n        <h2 className=\"titleGifDetail\">{title}</h2>\r\n        <Gif title={title} id={id} url={url} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport { GifsContextProvider } from \"./context/GifsContext\";\r\nimport { Route } from \"wouter\";\r\nimport Home from \"./pages/Home\";\r\nimport SearchResults from \"./pages/SearchResults\";\r\nimport DetailGif from \"./pages/Detail\";\r\n\r\nfunction App() {\r\n  return (\r\n    <GifsContextProvider>\r\n      <Route path=\"/giffy-app/\" component={Home} />\r\n      <Route path=\"/giffy-app/gifs/:keyword\" component={SearchResults} />\r\n      <Route path=\"/giffy-app/gifs/detail/:id\" component={DetailGif} />\r\n    </GifsContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}